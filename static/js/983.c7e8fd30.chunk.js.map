{"version":3,"file":"static/js/983.c7e8fd30.chunk.js","mappings":"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","sources":["pages/HomePage.jsx","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport Link from '@mui/material/Link';\n\nimport { Section } from 'components';\n\nconst style = {\n  wrapper: {\n    width: 'vw',\n    height: '88vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    padding: '20px',\n  },\n};\n\nexport default function HomePage() {\n  return (\n    <Section>\n      <div style={style.wrapper}>\n        <h1 style={style.title}>Welcome to Phonebook</h1>\n        <Link underline=\"hover\"\n              color=\"#1976d2\"\n        >\n          <NavLink style={{ color: 'inherit', textDecoration: 'none' }}\n                   to=\"/login\"\n          >Already on phonebook? log In</NavLink>\n        </Link>\n        <span>or</span>\n        <Link underline=\"hover\"\n              color=\"#1976d2\"\n        >\n          <NavLink style={{ color: 'inherit', textDecoration: 'none' }}\n                   to=\"/registration\"\n          >Registration</NavLink>\n        </Link>\n      </div>\n\n    </Section>\n  );\n};\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["style","wrapper","width","height","display","flexDirection","justifyContent","alignItems","title","padding","HomePage","_jsx","Section","children","_jsxs","Link","underline","color","NavLink","textDecoration","to","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","_ref","theme","ownerState","transformedColor","transformDeprecatedColors","getPath","concat","channelColor","alpha","_excluded","LinkRoot","styled","Typography","name","overridesResolver","props","styles","root","capitalize","component","button","_extends","textDecorationColor","getTextDecoration","_defineProperty","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","className","_props$color","_props$component","onBlur","onFocus","TypographyClasses","_props$underline","_props$variant","variant","sx","other","_objectWithoutPropertiesLoose","_useIsFocusVisible","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","_React$useState","_React$useState2","_slicedToArray","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","clsx","event","current","_toConsumableArray","Object","keys","includes","Array","isArray"],"sourceRoot":""}